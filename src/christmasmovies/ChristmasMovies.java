/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package christmasmovies;
//Imports//
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * ChristmasMovies.java
 * john 
 * 8th/12/2020
 */

public class ChristmasMovies extends javax.swing.JFrame 
{
    //Global Variables//
 /*
   Source used for connecting JDBC to my SQL project:
  https://www.tutorialspoint.com/jdbc/jdbc-insert-records.htm
  */ 
    //JDBC variables//
    //Driver//
    final String jdbcDriver = "com.mysql.jdbc.Driver";
    //URL string//
    final String jdbcURL = "jdbc:mysql://localhost/christmasMovies";
    //SQL DB username and password
    final String jdbcUser = "root";
    final String jdbcPass = "root";
    //Connection variable//
    Connection conn = null;
    //SQL statement/query variable//
    ResultSet results = null;
    Statement statement = null;
    DefaultTableModel dataModel = null;
    String query = "";
    /**
     * Creates new form ChristmasMovies
     */
    public ChristmasMovies() 
    {
        initComponents();
        this.setResizable(false);           //Stop the resize of the program //
        this.setLocationRelativeTo(null);   //Set JFrame to center//
        this.setTitle("Christmas Movies");   //Set the title of the app//
        //Set the initial button for BTN update//
        btnUpdateTable.setText("Show List");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panelAddMovie = new javax.swing.JPanel();
        lblMovieTitle = new javax.swing.JLabel();
        lblMovieDate = new javax.swing.JLabel();
        lblMovieTime = new javax.swing.JLabel();
        btnAddMovie = new javax.swing.JButton();
        txtfieldMovieTitle = new javax.swing.JTextField();
        txtfieldMovieDate = new javax.swing.JTextField();
        txtfieldMovieTime = new javax.swing.JTextField();
        lblChristmasMoviesTitle = new javax.swing.JLabel();
        panelMovieDisplay = new javax.swing.JPanel();
        txtfieldSearchbox = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnUpdateTable = new javax.swing.JButton();
        btnDeleteMovie = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMovieTitle.setText("Movie Title:");

        lblMovieDate.setText("Movie day to air:");

        lblMovieTime.setText("Movie time to air:");

        btnAddMovie.setText("Add Movie");
        btnAddMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMovieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddMovieLayout = new javax.swing.GroupLayout(panelAddMovie);
        panelAddMovie.setLayout(panelAddMovieLayout);
        panelAddMovieLayout.setHorizontalGroup(
            panelAddMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddMovieLayout.createSequentialGroup()
                .addGroup(panelAddMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelAddMovieLayout.createSequentialGroup()
                        .addContainerGap(18, Short.MAX_VALUE)
                        .addComponent(txtfieldMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelAddMovieLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panelAddMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMovieTime)
                            .addComponent(lblMovieDate)
                            .addComponent(lblMovieTitle)
                            .addComponent(txtfieldMovieDate)
                            .addComponent(txtfieldMovieTime)
                            .addComponent(btnAddMovie, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        panelAddMovieLayout.setVerticalGroup(
            panelAddMovieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddMovieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMovieTitle)
                .addGap(4, 4, 4)
                .addComponent(txtfieldMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMovieDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldMovieDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(lblMovieTime)
                .addGap(7, 7, 7)
                .addComponent(txtfieldMovieTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnAddMovie)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        lblChristmasMoviesTitle.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        lblChristmasMoviesTitle.setText("Christmas Movies");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnUpdateTable.setText("Update List");
        btnUpdateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTableActionPerformed(evt);
            }
        });

        btnDeleteMovie.setText("Delete Movie");
        btnDeleteMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMovieActionPerformed(evt);
            }
        });

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Movie Title", "Movie Day", "Movie Time"
            }
        ));
        tableData.setEnabled(false);
        jScrollPane3.setViewportView(tableData);

        jLabel1.setText("Enter a day to search:");

        javax.swing.GroupLayout panelMovieDisplayLayout = new javax.swing.GroupLayout(panelMovieDisplay);
        panelMovieDisplay.setLayout(panelMovieDisplayLayout);
        panelMovieDisplayLayout.setHorizontalGroup(
            panelMovieDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMovieDisplayLayout.createSequentialGroup()
                .addGroup(panelMovieDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMovieDisplayLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelMovieDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMovieDisplayLayout.createSequentialGroup()
                                .addComponent(btnUpdateTable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteMovie))
                            .addGroup(panelMovieDisplayLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfieldSearchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMovieDisplayLayout.setVerticalGroup(
            panelMovieDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMovieDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMovieDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateTable)
                    .addComponent(btnDeleteMovie))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMovieDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfieldSearchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(panelAddMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelMovieDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblChristmasMoviesTitle)
                .addGap(246, 246, 246))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblChristmasMoviesTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelMovieDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelAddMovie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     
    
    //Button to add the details of the movie to the SQL database//
    private void btnAddMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMovieActionPerformed
      //Variables//
      String movieTitle = txtfieldMovieTitle.getText();             //Temp: Store the movie title in a String//
      String movieDate = txtfieldMovieDate.getText();               //Temp: Store the movie date into a String//               
      String movieTime = txtfieldMovieTime.getText();               //Temp: Store the movie time in a String//
    
      //If any of the textfields is empty
      if (txtfieldMovieDate.getText().isEmpty() || txtfieldMovieDate.getText().isEmpty() || txtfieldMovieTime.getText().isEmpty())
      {
          JOptionPane.showMessageDialog(null, "Please fill in the movie title, day and time");
      }
      /*
        Else if they aren't empty, perform a try/catch to insert data
      */
        else 
      {
            //Try establish a connection to the SQL database//
            try 
            {
                //Declare JDBC driver with class forName//
                Class.forName("com.mysql.jdbc.Driver");
                //Open a connection//
                conn = DriverManager.getConnection(jdbcURL, jdbcUser, jdbcPass);
                //Use the statement variable and to tell the connection to make a statement//
                statement = conn.createStatement();
                /*
            EXECUTE an update to insert data into the SQL database,
            we're inserting into the movies table in the movieTitle, movieDay and movieTime column
            with the values from the temp Strings above
                 */

                statement.executeUpdate("INSERT INTO movies (movieTitle, movieDay, movieTime) VALUES('" + movieTitle + "','" + movieDate + "', '" + movieTime + "')");
                //Prompt the user that the movie has been added!//
                JOptionPane.showMessageDialog(null, "Movie has been added!", "Succesful!", JOptionPane.PLAIN_MESSAGE);
                //Close the connection//
                conn.close();
                //Clear textfields//
                txtfieldMovieTitle.setText("");
                txtfieldMovieDate.setText("");
                txtfieldMovieTime.setText("");
            } catch (ClassNotFoundException ex) 
            {
                //Show error message to the user if any//
                JOptionPane.showMessageDialog(null, ex.toString(), "ERROR!", JOptionPane.ERROR_MESSAGE);

            } catch (SQLException ex) 
            {
                //Show error message to the user if any//
                JOptionPane.showMessageDialog(null, ex.toString(), "ERROR!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddMovieActionPerformed
    //Update Table to display the records from SQL//
    private void btnUpdateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTableActionPerformed
        //Once BTN is clicked, change the title of the button to update
        btnUpdateTable.setText("Update list");
        //Try make a connection to the SQL database//
        try
        {
            //Declare DBC driver with class forName
            Class.forName("com.mysql.jdbc.Driver");
            //Open a connection
            conn = DriverManager.getConnection(jdbcURL, jdbcUser, jdbcPass);
            //Query - Use the SELECT all FROM movies table query to get the data//
            query = "SELECT * FROM movies";
            //Use the statement variable and to tell the connection to make a statement//
            statement = conn.createStatement();
            //Create a result set variable and execute the query//
            /*
            use ResultsSet which is a table of data and execute the query above to retrieve the data
            from the SQL database
            source: https://docs.oracle.com/javase/tutorial/jdbc/basics/retrieving.html
            */
            results = statement.executeQuery(query);
            /*
            DefaultTableModel stores the data for the J-Table
            source#1: https://docs.oracle.com/javase/7/docs/api/javax/swing/table/DefaultTableModel.html
            source#2: https://www.thoughtco.com/defaulttablemodel-overview-2033890
            */
            dataModel = (DefaultTableModel)tableData.getModel();
            /* 
            setRowCount(0) = remove all the uneeded rows that aren't being used
            source: https://www.codota.com/code/java/methods/javax.swing.table.DefaultTableModel/setRowCount
            */
            dataModel.setRowCount(0);
            /* 
            Loop through the results and add the data to the dataModel variable
            */
            while (results.next())
            {
                //Store the data//
                String movies = results.getString(2);
                String day = results.getString(3);
                String time = results.getString(4);
                //Add data to the rows//
                dataModel.addRow(new Object[]{movies, day, time});
            }
            /*
            Set the data of the model to the 
            table variable (which is the U.I J-Table)
            */
            tableData.setModel(dataModel);
            statement = conn.createStatement(); 
            //Close the connection//
            conn.close();     
        } 
        catch(Exception e)
        {
           //Show error message to the user if any//
          JOptionPane.showMessageDialog(null, e.toString(), "ERROR!", JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_btnUpdateTableActionPerformed
    //Search button: this searches through the SQL database and find and display the searched term//
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //Variable//
        String searchTerm = txtfieldSearchbox.getText();        //Temp: Store the earch term from the textfield in a String//
        //If textfield isn't empty and has a length more than 0 it will find the term in the SQL db//
        if (!txtfieldSearchbox.getText().isEmpty() || txtfieldSearchbox.getText().length() > 0)
        {
            //Try make a connection to the SQL database// 
            try 
            {
                //Declare JDBC driver with class forName
                Class.forName("com.mysql.jdbc.Driver");
                //Open a connection
                conn = DriverManager.getConnection(jdbcURL, jdbcUser, jdbcPass);
                //Query = SELECT all FROM movies [table] WHERE movieDay is equal to the search term value//
                query = "SELECT * FROM movies WHERE movieDay='" + searchTerm + "'";
                //Use the statement variable and to tell the connection to make a statement//
                statement = conn.createStatement();
                //Use ResultsSet to execute the query above//
                results = statement.executeQuery(query);
                //DefaultTableModel stores the data for the J-Table//
                dataModel = (DefaultTableModel) tableData.getModel();
                //setRowCount(0) = remove all the uneeded rows that aren't being used//
                dataModel.setRowCount(0);
                /* 
            Loop through the results and add the data to the dataModel variable
                 */
                while (results.next()) 
                {
                    //Store the data//
                    String movies = results.getString(2);
                    String day = results.getString(3);
                    String time = results.getString(4);
                    //Add data to the rows//
                    dataModel.addRow(new Object[]{movies, day, time});
                }
                /*
            Set the data of the model to the 
            table variable (which is the U.I J-Table)
                 */
                tableData.setModel(dataModel);
                statement = conn.createStatement();
                //Close the connection//
                conn.close();
            } catch (Exception e) 
            {
                //Show error message to the user if any//
                JOptionPane.showMessageDialog(null, e.toString(), "ERROR!", JOptionPane.ERROR_MESSAGE);
            } 
        }
        //If the search textfield is empty, prompt user to enter a search term//
        else
        {
            JOptionPane.showMessageDialog(null, "Please enter a day to find a movie");
        }
       
    }//GEN-LAST:event_btnSearchActionPerformed

   
    
   //Delete a movie// 
    private void btnDeleteMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMovieActionPerformed
        //Variable//
        /*
        Create a String called, "searchTerm" that prompts the 
        user with a JOptionPane to get the value to delete
        the row from the SQL database
        */
        String searchTerm = JOptionPane.showInputDialog(null, "Insert the title of the movie to delete...", "Delete movie by the movie title", JOptionPane.INFORMATION_MESSAGE);
        //Check if the search term isn't empty 
        if (searchTerm != null && searchTerm.length() > 0) 
        {
            //Try make a connection to the SQL database//
            try 
            {
                //Declare JDBC driver with class forName
                Class.forName("com.mysql.jdbc.Driver");
                //Open a connection
                conn = DriverManager.getConnection(jdbcURL, jdbcUser, jdbcPass);
                //Query = DELETE FROM movies [table] WHERE movieTitle is equal to the searched term//
                query = "DELETE FROM movies WHERE movieTitle='" + searchTerm + "'";
                //Use the statement variable and to tell the connection to make a statement//
                statement = conn.createStatement();
                //Execute an update to remove this row from the database//
                statement.executeUpdate(query);
                //Prompt the user with that the row was deleted//
                JOptionPane.showMessageDialog(null, "Movie was deleted", "Movie Deleted Succesfully", JOptionPane.PLAIN_MESSAGE);
                //Close the connection//
                conn.close();
            } catch (Exception e) 
            {
                //Show error message to the user if any//
                JOptionPane.showMessageDialog(null, e.toString(), "ERROR!", JOptionPane.ERROR_MESSAGE);
            }
        }
        //Else if the search term is empty, the user cancelled out or closed the window//
        else
        {
          //Do not nothing//
        }
    }//GEN-LAST:event_btnDeleteMovieActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChristmasMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChristmasMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChristmasMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChristmasMovies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new ChristmasMovies().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMovie;
    private javax.swing.JButton btnDeleteMovie;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblChristmasMoviesTitle;
    private javax.swing.JLabel lblMovieDate;
    private javax.swing.JLabel lblMovieTime;
    private javax.swing.JLabel lblMovieTitle;
    private javax.swing.JPanel panelAddMovie;
    private javax.swing.JPanel panelMovieDisplay;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtfieldMovieDate;
    private javax.swing.JTextField txtfieldMovieTime;
    private javax.swing.JTextField txtfieldMovieTitle;
    private javax.swing.JTextField txtfieldSearchbox;
    // End of variables declaration//GEN-END:variables
}
